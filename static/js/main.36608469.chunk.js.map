{"version":3,"sources":["reducers/stopSearchReducer.js","providers/stopSearchProvider.js","services/client.js","services/linesDiscovery.js","services/estimatedTimetable.js","pages/StopSearch/VehicleModeFilter.js","pages/StopSearch/LineSelection.js","pages/StopSearch/StopSelection.js","pages/StopSearch/DateSelection.js","services/stopMonitoring.js","pages/StopSearch/SearchButton.js","pages/StopSearch/Timer.js","pages/StopSearch/Results.js","pages/StopSearch/Loading.js","themes/ctsTheme.js","pages/StopSearch.js","App.js","serviceWorker.js","index.js"],"names":["loading","stopSearchReducer","state","action","type","lines","data","LinesDelivery","AnnotatedLineRef","map","line","LineRef","LineName","RouteType","Extension","stops","length","Object","objectSpread","stopsIds","ServiceDelivery","EstimatedTimetableDelivery","Etd","EstimatedJourneyVersionFrame","Ejvf","EstimatedVehicleJourney","Evj","DirectionRef","VehicleMode","EstimatedCalls","Ec","StopPointRef","push","StopPointName","DestinationName","mode","checked","stop","date","results","StopMonitoringDelivery","MonitoredStopVisit","visit","journey","MonitoredVehicleJourney","call","MonitoredCall","IsRealTime","ExpectedArrivalTime","ExpectedDepartureTime","maxStopArrivals","Error","StopSearchContext","createContext","StopSearchProvider","_ref","children","initialState","_useReducer","useReducer","_useReducer2","slicedToArray","context","dispatch","react_default","a","createElement","Provider","value","api","axios","create","baseURL","client","route","params","get","auth","username","then","res","catch","error","alert","linesDiscovery","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","sent","_x","apply","this","arguments","estimatedTimetable","VehicleModeFilter","_useContext","useContext","handleChange","event","target","FormLabel","component","FormControlLabel","control","Checkbox","bus","onChange","color","label","tram","LineSelection","_useContext$state","options","filter","find","element","selectStyles","menu","styles","zIndex","react_select_browser_esm","selected","StopSelection","select","DateSelection","Grid","container","justify","spacing","key","item","xs","material_ui_pickers_esm","utils","DateFnsUtils","locale","id","ampm","variant","Button","onClick","Date","index_es","icon","faUndo","stopMonitoring","MonitoringRef","StartTime","MaximumStopVisits","Timer","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","dateUpdate","setState","visibleDate","calculate","diff","moment","finishedText","utc","format","intervalId","setInterval","clearInterval","Component","Results","search","print","download","viewColumns","selectableRows","rowsPerPage","customFooter","count","page","changeRowsPerPage","changePage","TableFooter","result","StopSearch_Timer","dist_default","title","columns","withTheme","faSpinner","pulse","size","theme","palette","primary","main","ctsTheme","createMuiTheme","useStyles","makeStyles","root","padding","StopSearchPage","useEffect","classes","Paper","className","StopSearch_VehicleModeFilter","StopSearch_DateSelection","StopSearch_LineSelection","StopSearch_StopSelection","style","textAlign","SearchButton","StopSearch_Loading","StopSearch_Results","StopSearch","StopSearchInitialState","ThemeProvider","stopSearchProvider_StopSearchProvider","StopSearch_StopSearchPage","App","react_router_dom","react_router","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36608469.chunk.js","sourcesContent":["let loading = false;\n\nconst stopSearchReducer = (state, action) => {\n  switch (action.type) {\n    // Action : setLines\n    case 'setLines':\n      loading = true;\n      let lines = action.data.LinesDelivery.AnnotatedLineRef.map((line) => {\n        return {\n          LineRef: line.LineRef,\n          LineName: line.LineName,\n          RouteType: line.Extension.RouteType\n        }\n      });\n\n      if (state.stops.length > 0) {\n        loading = false;\n      }\n\n      return {\n        ...state,\n        lines: lines,\n        loading: loading\n      };\n\n    // Action : setStops\n    case 'setStops':\n      loading = true;\n      let stops = [];\n      let stopsIds = {};\n\n      action.data.ServiceDelivery.EstimatedTimetableDelivery.map((Etd) => {\n        Etd.EstimatedJourneyVersionFrame.map((Ejvf) => {\n          Ejvf.EstimatedVehicleJourney.map((Evj) => {\n            let LineRef       = Evj.LineRef;\n            let DirectionRef  = Evj.DirectionRef;\n            let VehicleMode   = Evj.Extension.VehicleMode;\n\n            Evj.EstimatedCalls.map((Ec) => {\n              if (stopsIds[Ec.StopPointRef]) {\n                return false;\n              }\n\n              stops.push({\n                LineRef: LineRef,\n                DirectionRef: DirectionRef,\n                StopPointRef: Ec.StopPointRef,\n                StopPointName: Ec.StopPointName,\n                DestinationName: Ec.DestinationName,\n                VehicleMode: VehicleMode\n              });\n\n              stopsIds[Ec.StopPointRef] = true;\n\n              return false;\n            });\n\n            return false;\n          });\n          return false;\n        });\n        return false;\n      });\n\n      if (state.lines.length > 0) {\n        loading = false;\n      }\n\n      return {\n        ...state,\n        stops: stops,\n        loading: loading\n      };\n\n    // Action : VehicleModeFilter\n    case 'VehicleModeFilter':\n      let VehicleMode = state.VehicleMode;\n      VehicleMode[action.data.mode] = action.data.checked;\n\n      return {\n        ...state,\n        VehicleMode: VehicleMode\n      }\n\n    // Action : LineSelection\n    case 'LineSelection':\n      return {\n        ...state,\n        line: action.data.line\n      }\n\n    // Action : StopSelection\n    case 'StopSelection':\n      return {\n        ...state,\n        stop: action.data.stop\n      }\n\n    // Action : DateSelection\n    case 'DateSelection':\n      return {\n        ...state,\n        date: action.data.date\n      }\n\n    // Action : Search\n    case 'Search':\n      let results = [];\n\n      if (typeof(action.data.ServiceDelivery.StopMonitoringDelivery[0].MonitoredStopVisit) === 'undefined') {\n        return {\n          ...state,\n          results: results\n        }\n      }\n\n      action.data.ServiceDelivery.StopMonitoringDelivery[0].MonitoredStopVisit.map((visit) => {\n        let journey = visit.MonitoredVehicleJourney;\n        let call = journey.MonitoredCall;\n\n        results.push({\n          DestinationName: journey.DestinationName,\n          LineRef: journey.LineRef,\n          VehicleMode: journey.VehicleMode,\n          IsRealTime: call.Extension.IsRealTime,\n          StopPointName: call.StopPointName,\n          ExpectedArrivalTime: call.ExpectedArrivalTime,\n          ExpectedDepartureTime: call.ExpectedDepartureTime\n        });\n\n        return false;\n      });\n\n      return {\n        ...state,\n        results: results,\n        loading: false\n      }\n\n    // Action : maxStopArrivalsSelection\n    case 'maxStopArrivalsSelection':\n      return {\n        ...state,\n        maxStopArrivals: action.data.maxStopArrivals\n      }\n\n    // Action : Loading\n    case 'loading':\n      return {\n        ...state,\n        loading: true\n      }\n\n    // Action : default\n    default:\n      throw new Error();\n  }\n};\n\nexport { stopSearchReducer };\n","import React, { createContext, useReducer } from \"react\";\nimport { stopSearchReducer } from \"../reducers/stopSearchReducer\";\n\nconst StopSearchContext = createContext({});\n\nconst StopSearchProvider = ({ children, initialState }) => {\n  const [state, dispatch] = useReducer(stopSearchReducer, initialState);\n  const context = { state, dispatch };\n  return (\n    <StopSearchContext.Provider value={context}>{children}</StopSearchContext.Provider>\n  );\n};\n\nexport { StopSearchContext, StopSearchProvider };","import axios from 'axios';\n\nvar token     = '27fc0b07-5e85-41de-a749-338e1a00e4e8';\nvar apiUrl   = 'https://api.cts-strasbourg.eu/v1/siri/2.0/';\n\nconst api = axios.create({\n  baseURL: apiUrl,\n});\n\nconst client = (route, params) => (\n  api.get(route, {\n    params: params.params,\n    auth: {\n      username: token\n    }\n  }).then((res) => {\n    let data = res.data;\n    params.dispatch({type: params.type, data: data})\n  }).catch(function (error) {\n    alert(error);\n  })\n);\n\nexport default client;","import client from './client';\n\nconst linesDiscovery = async (params) => (\n  await client('lines-discovery', params)\n);\n\nexport default linesDiscovery;","import client from './client';\n\nconst estimatedTimetable = async (params) => (\n  await client('estimated-timetable', params)\n);\n\nexport default estimatedTimetable;","import React, { useContext } from 'react';\nimport { StopSearchContext } from '../../providers/stopSearchProvider';\nimport { FormControlLabel, FormLabel, Checkbox } from '@material-ui/core';\n\nconst VehicleModeFilter = () => {\n  const { state: { VehicleMode }, dispatch } = useContext(StopSearchContext);\n\n  const handleChange = mode => event => {\n    dispatch({type: 'VehicleModeFilter', data: {mode: mode, checked: event.target.checked}});\n  };\n\n  return (\n    <div>\n      <FormLabel component=\"legend\">Type de transport</FormLabel>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={VehicleMode.bus}\n            onChange={handleChange('bus')}\n            value=\"bus\"\n            color=\"primary\"\n          />\n        }\n        label=\"Bus\"\n      />\n\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={VehicleMode.tram}\n            onChange={handleChange('tram')}\n            value=\"tram\"\n            color=\"primary\"\n          />\n        }\n        label=\"Tram\"\n      />\n    </div>\n  );\n}\n\nexport default VehicleModeFilter;\n","import React, { useContext } from 'react';\nimport { StopSearchContext } from '../../providers/stopSearchProvider';\nimport Select from 'react-select';\nimport { FormLabel } from '@material-ui/core';\n\nconst LineSelection = () => {\n  const { state: { lines, line, VehicleMode }, dispatch } = useContext(StopSearchContext);\n\n  const options = lines.filter((line) => {\n    if (VehicleMode[line.RouteType]) {\n      return true;\n    }\n    return false;\n  }).map(line => ({\n    value: line.LineRef,\n    label: line.RouteType+' '+line.LineRef+ ' - '+line.LineName\n  }));\n\n  const value = options.find(element => {\n    return element.value === line;\n  });\n\n  const handleChange = selected => {\n    dispatch({type: 'LineSelection', data: {line: selected.value}});\n  };\n\n  const selectStyles = { menu: styles => ({ ...styles, zIndex: 999 }) };\n\n  return (\n    <div>\n      <FormLabel component=\"legend\">Ligne</FormLabel>\n      <Select\n        value={value}\n        onChange={handleChange}\n        options={options}\n        styles={selectStyles}\n      />\n    </div>\n  );\n}\n\nexport default LineSelection;\n","import React, { useContext } from 'react';\nimport { StopSearchContext } from '../../providers/stopSearchProvider';\nimport Select from 'react-select';\nimport { FormLabel } from '@material-ui/core';\n\nconst StopSelection = () => {\n  const { state: { stops, stop, line }, dispatch } = useContext(StopSearchContext);\n\n  const options = stops.filter((stop) => {\n    if (stop.LineRef === line) {\n      return true;\n    }\n    return false;\n  }).map(stop => ({\n    value: stop.StopPointRef,\n    label: stop.VehicleMode+' '+stop.LineRef+' - '+stop.StopPointName+ ' => '+stop.DestinationName\n  }));\n\n  const value = options.find(element => {\n    return element.value === stop;\n  });\n\n  const handleChange = selected => {\n    dispatch({type: 'StopSelection', data: {stop: selected.value}});\n  };\n\n  const selectStyles = { menu: styles => ({ ...styles, zIndex: 999 }) };\n\n  let select = '';\n  if (options.length > 0) {\n    select =\n      <div>\n        <FormLabel component=\"legend\">Arrêt</FormLabel>\n        <Select\n          value={value}\n          onChange={handleChange}\n          options={options}\n          styles={selectStyles}\n        />\n      </div>\n  }\n\n  return (\n    <div>\n      {select}\n    </div>\n  );\n}\n\nexport default StopSelection;\n","import React, { useContext } from 'react';\nimport { StopSearchContext } from '../../providers/stopSearchProvider';\nimport { FormLabel } from '@material-ui/core';\nimport DateFnsUtils from '@date-io/date-fns';\nimport locale from 'date-fns/locale/fr';\nimport {\n  MuiPickersUtilsProvider,\n  TimePicker\n} from '@material-ui/pickers';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUndo } from '@fortawesome/free-solid-svg-icons';\n\nconst DateSelection = () => {\n  const { state: { date, stop }, dispatch } = useContext(StopSearchContext);\n\n  const handleChange = date => {\n    dispatch({type: 'DateSelection', data: {date: date}});\n  };\n\n  const handleReset = () => {\n    dispatch({type: 'DateSelection', data: {date: new Date()}});\n  }\n\n  if (stop === null) {\n    return <div></div>;\n  }\n\n  return (\n    <div>\n      <FormLabel component=\"legend\">Horaire</FormLabel>\n      <Grid container justify=\"center\" spacing={2}>\n        <Grid key='MuiPickersUtilsProvider' item xs={6}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils} locale={locale}>\n            <TimePicker\n              id=\"mui-pickers-time\"\n              ampm={false}\n              variant=\"inline\"\n              value={date}\n              onChange={handleChange}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid key='button' item xs={6}>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleReset}>\n            <FontAwesomeIcon icon={faUndo} />\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default DateSelection;\n","import client from './client';\n\nconst stopMonitoring = async (params) => (\n  await client('stop-monitoring', params)\n);\n\nexport default stopMonitoring;","import React, { useContext } from 'react';\nimport { StopSearchContext } from '../../providers/stopSearchProvider';\nimport Button from '@material-ui/core/Button';\n\nimport stopMonitoring from '../../services/stopMonitoring';\n\nconst DateSelection = () => {\n  const { state: { stop, date, line, maxStopArrivals }, dispatch } = useContext(StopSearchContext);\n\n  const handleChange = () => {\n    dispatch({type: 'loading'});\n\n    stopMonitoring({\n      dispatch: dispatch,\n      type: 'Search',\n      params: {\n        MonitoringRef: stop,\n        LineRef: line,\n        StartTime: date,\n        MaximumStopVisits: maxStopArrivals\n      }\n    });\n\n  };\n\n  if (stop === null) {\n    return <div></div>;\n  }\n\n  return (\n    <Button variant=\"contained\" color=\"primary\" onClick={handleChange}>\n      Rechercher\n    </Button>\n  );\n}\n\nexport default DateSelection;\n","import React, { Component } from 'react';\nimport moment from 'moment';\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.date = moment(props.date);\n    this.intervalId = null;\n\n    this.state = {\n      visibleDate: this.calculate()\n    };\n  }\n\n  dateUpdate = () => {\n    this.setState({\n      visibleDate: this.calculate()\n    });\n  }\n\n  calculate = () => {\n    let diff = this.date.diff(moment());\n    if (diff < 0) {\n      return this.props.finishedText;\n    }\n    return moment.utc(diff).format(\"HH:mm:ss\");\n  }\n\n  componentDidUpdate() {\n    this.date = moment(this.props.date);\n  }\n\n  componentDidMount() {\n    this.intervalId = setInterval(this.dateUpdate, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.visibleDate}\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import React, { useContext } from 'react';\nimport { StopSearchContext } from '../../providers/stopSearchProvider';\nimport MUIDataTable from \"mui-datatables\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport moment from 'moment';\n\nimport Timer from \"./Timer\";\n\nconst Results = () => {\n  const { state: { results, stop } } = useContext(StopSearchContext);\n\n  const options = {\n    filter: false,\n    search: false,\n    print: false,\n    download: false,\n    viewColumns: false,\n    selectableRows: 'none',\n    rowsPerPage: 100,\n    customFooter: (\n      count,\n      page,\n      rowsPerPage,\n      changeRowsPerPage,\n      changePage\n    ) => {\n      return <TableFooter></TableFooter>;\n    }\n  };\n\n  const columns = [\n    \"Ligne\",\n    \"Arrêt\",\n    \"Destination\",\n    \"Temps réel\",\n    \"Arrivée\",\n    \"Départ\",\n    \"Arrivée dans\",\n    \"Départ dans\"\n  ];\n\n  const data = results.map((result) => {\n    let element = [\n      result.VehicleMode+' '+result.LineRef,\n      result.StopPointName,\n      result.DestinationName,\n      result.IsRealTime === true ? \"Oui\" : \"Non\",\n      moment(result.ExpectedArrivalTime).format('DD/MM/YYYY HH:mm:ss'),\n      moment(result.ExpectedDepartureTime).format('DD/MM/YYYY HH:mm:ss'),\n      <Timer date={result.ExpectedArrivalTime} finishedText=\"Arrivé\" />,\n      <Timer date={result.ExpectedDepartureTime} finishedText=\"Passé\" />\n      //moment.utc(moment(result.ExpectedArrivalTime).diff(moment())).format(\"HH:mm:ss\")\n    ];\n\n    return element;\n  });\n\n  if (results.length === 0) {\n    if (stop != null) {\n      return <div>Pas de résultat.</div>;\n    }\n    return <div></div>;\n  }\n\n  return (\n    <div>\n      <br />\n      <MUIDataTable\n        title={\"Liste des horaires\"}\n        data={data}\n        columns={columns}\n        options={options}\n      />\n    </div>\n  );\n}\n\nexport default Results;\n","import React,  { useContext } from 'react';\nimport { StopSearchContext } from '../../providers/stopSearchProvider';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { withTheme } from '@material-ui/styles';\n\nconst Loading = (props) => {\n  const { state: { loading } } = useContext(StopSearchContext);\n\n  if (!loading) {\n    return <div></div>\n  }\n\n  return (\n    <FontAwesomeIcon icon={faSpinner} pulse size=\"4x\" color={props.theme.palette.primary.main} />\n  );\n}\n\nexport default withTheme(Loading);\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst ctsTheme = createMuiTheme({});\n\nexport default ctsTheme;","import React, { useContext, useEffect } from 'react';\nimport { StopSearchContext, StopSearchProvider } from '../providers/stopSearchProvider';\nimport linesDiscovery from '../services/linesDiscovery';\nimport estimatedTimetable from '../services/estimatedTimetable';\n\nimport VehicleModeFilter from './StopSearch/VehicleModeFilter';\nimport LineSelection from './StopSearch/LineSelection';\nimport StopSelection from './StopSearch/StopSelection';\nimport DateSelection from './StopSearch/DateSelection';\nimport SearchButton from './StopSearch/SearchButton';\nimport Results from './StopSearch/Results';\nimport Loading from './StopSearch/Loading';\n\nimport ctsTheme from '../themes/ctsTheme';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n  },\n}));\n\nconst StopSearchPage = () => {\n  const { dispatch } = useContext(StopSearchContext);\n\n  useEffect(() => {\n    dispatch({type: 'loading'});\n\n    linesDiscovery({\n      dispatch: dispatch,\n      type: 'setLines',\n      params: {}\n    });\n\n    estimatedTimetable({\n      dispatch: dispatch,\n      type: 'setStops',\n      params: {}\n    });\n  }, [dispatch]);\n\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Grid container justify=\"center\" spacing={2}>\n            <Grid key='VehicleModeFilter' item xs={6}>\n              <VehicleModeFilter />\n            </Grid>\n            <Grid key='DateSelection' item xs={6}>\n              <DateSelection />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" spacing={2}>\n            <Grid key='LineSelection' item xs={12}>\n              <LineSelection />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" spacing={2}>\n            <Grid key='LineSelection' item xs={12}>\n              <StopSelection />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" spacing={2}>\n            <Grid key='LineSelection' item xs={12} style={{textAlign: \"center\"}}>\n              <SearchButton />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" spacing={2}>\n            <Grid key='LineSelection' item xs={12} style={{textAlign: \"center\"}}>\n              <Loading />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Results />\n    </Paper>\n  );\n}\n\nconst StopSearch = () => {\n  const StopSearchInitialState = {\n    lines: [],\n    stops: [],\n    VehicleMode: {\n      bus: true,\n      tram: true\n    },\n    line: null,\n    stop: null,\n    date: new Date(),\n    results: [],\n    maxStopArrivals: 5,\n    loading: false\n  };\n\n  return (\n    <ThemeProvider theme={ctsTheme}>\n      <StopSearchProvider initialState={StopSearchInitialState}>\n        <StopSearchPage />\n      </StopSearchProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default StopSearch;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport StopSearch from './pages/StopSearch';\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={StopSearch} />\n      <Route exact path=\"/cts-2019/\" component={StopSearch} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
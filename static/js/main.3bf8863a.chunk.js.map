{"version":3,"sources":["reducers/stopSearchReducer.js","providers/stopSearchProvider.js","services/client.js","services/linesDiscovery.js","services/estimatedTimetable.js","pages/StopSearch/VehicleModeFilter.js","pages/StopSearch/LineSelection.js","pages/StopSearch/StopSelection.js","pages/StopSearch/DateSelection.js","services/stopMonitoring.js","pages/StopSearch/SearchButton.js","pages/StopSearch/Timer.js","pages/StopSearch/Results.js","pages/StopSearch.js","App.js","serviceWorker.js","index.js"],"names":["stopSearchReducer","state","action","type","lines","data","LinesDelivery","AnnotatedLineRef","map","line","LineRef","LineName","RouteType","Extension","Object","objectSpread","stops","stopsIds","ServiceDelivery","EstimatedTimetableDelivery","Etd","EstimatedJourneyVersionFrame","Ejvf","EstimatedVehicleJourney","Evj","DirectionRef","VehicleMode","EstimatedCalls","Ec","StopPointRef","push","StopPointName","DestinationName","mode","checked","stop","date","results","StopMonitoringDelivery","MonitoredStopVisit","visit","journey","MonitoredVehicleJourney","call","MonitoredCall","IsRealTime","ExpectedArrivalTime","ExpectedDepartureTime","Error","StopSearchContext","createContext","StopSearchProvider","_ref","children","initialState","_useReducer","useReducer","_useReducer2","slicedToArray","context","dispatch","react_default","a","createElement","Provider","value","api","axios","create","baseURL","client","route","params","get","auth","username","then","res","linesDiscovery","asyncToGenerator","regenerator_default","mark","_callee","$params","wrap","_context","prev","next","abrupt","sent","_x","apply","this","arguments","estimatedTimetable","VehicleModeFilter","_useContext","useContext","handleChange","event","target","FormLabel","component","FormControlLabel","control","Checkbox","bus","onChange","color","label","tram","LineSelection","_useContext$state","options","filter","find","element","react_select_browser_esm","selected","StopSelection","select","length","DateSelection","material_ui_pickers_esm","utils","DateFnsUtils","locale","margin","id","ampm","variant","stopMonitoring","maxStopArrivals","Button","onClick","MonitoringRef","StartTime","MaximumStopVisits","Timer","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","dateUpdate","setState","visibleDate","moment","utc","diff","format","intervalId","setInterval","clearInterval","Component","search","print","download","viewColumns","selectableRows","rowsPerPage","customFooter","count","page","changeRowsPerPage","changePage","TableFooter","result","StopSearch_Timer","dist_default","title","columns","StopSearchPage","useEffect","StopSearch_VehicleModeFilter","StopSearch_LineSelection","StopSearch_StopSelection","StopSearch_DateSelection","SearchButton","Results","StopSearch","StopSearchInitialState","Date","stopSearchProvider_StopSearchProvider","StopSearch_StopSearchPage","App","react_router_dom","react_router","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3bf8863a.chunk.js","sourcesContent":["const stopSearchReducer = (state, action) => {\n  switch (action.type) {\n    // Action : setLines\n    case 'setLines':\n      let lines = action.data.LinesDelivery.AnnotatedLineRef.map((line) => {\n        return {\n          LineRef: line.LineRef,\n          LineName: line.LineName,\n          RouteType: line.Extension.RouteType\n        }\n      });\n\n      return {\n        ...state,\n        lines: lines\n      };\n\n    // Action : setStops\n    case 'setStops':\n      let stops = [];\n      let stopsIds = {};\n\n      action.data.ServiceDelivery.EstimatedTimetableDelivery.map((Etd) => {\n        Etd.EstimatedJourneyVersionFrame.map((Ejvf) => {\n          Ejvf.EstimatedVehicleJourney.map((Evj) => {\n            let LineRef       = Evj.LineRef;\n            let DirectionRef  = Evj.DirectionRef;\n            let VehicleMode   = Evj.Extension.VehicleMode;\n\n            Evj.EstimatedCalls.map((Ec) => {\n              if (stopsIds[Ec.StopPointRef]) {\n                return false;\n              }\n\n              stops.push({\n                LineRef: LineRef,\n                DirectionRef: DirectionRef,\n                StopPointRef: Ec.StopPointRef,\n                StopPointName: Ec.StopPointName,\n                DestinationName: Ec.DestinationName,\n                VehicleMode: VehicleMode\n              });\n\n              stopsIds[Ec.StopPointRef] = true;\n\n              return false;\n            });\n\n            return false;\n          });\n          return false;\n        });\n        return false;\n      });\n\n      return {\n        ...state,\n        stops: stops\n      };\n\n    // Action : VehicleModeFilter\n    case 'VehicleModeFilter':\n      let VehicleMode = state.VehicleMode;\n      VehicleMode[action.data.mode] = action.data.checked;\n\n      return {\n        ...state,\n        VehicleMode: VehicleMode\n      }\n\n    // Action : LineSelection\n    case 'LineSelection':\n      return {\n        ...state,\n        line: action.data.line\n      }\n\n    // Action : StopSelection\n    case 'StopSelection':\n      return {\n        ...state,\n        stop: action.data.stop\n      }\n\n    // Action : DateSelection\n    case 'DateSelection':\n      return {\n        ...state,\n        date: action.data.date\n      }\n\n    // Action : Search\n    case 'Search':\n      let results = [];\n\n      action.data.ServiceDelivery.StopMonitoringDelivery[0].MonitoredStopVisit.map((visit) => {\n        let journey = visit.MonitoredVehicleJourney;\n        let call = journey.MonitoredCall;\n\n        results.push({\n          DestinationName: journey.DestinationName,\n          LineRef: journey.LineRef,\n          VehicleMode: journey.VehicleMode,\n          IsRealTime: call.Extension.IsRealTime,\n          StopPointName: call.StopPointName,\n          ExpectedArrivalTime: call.ExpectedArrivalTime,\n          ExpectedDepartureTime: call.ExpectedDepartureTime\n        });\n\n        return false;\n      });\n\n      return {\n        ...state,\n        results: results\n      }\n\n    // Action : default\n    default:\n      throw new Error();\n  }\n};\n\nexport { stopSearchReducer };\n","import React, { createContext, useReducer } from \"react\";\nimport { stopSearchReducer } from \"../reducers/stopSearchReducer\";\n\nconst StopSearchContext = createContext({});\n\nconst StopSearchProvider = ({ children, initialState }) => {\n  const [state, dispatch] = useReducer(stopSearchReducer, initialState);\n  const context = { state, dispatch };\n  return (\n    <StopSearchContext.Provider value={context}>{children}</StopSearchContext.Provider>\n  );\n};\n\nexport { StopSearchContext, StopSearchProvider };","import axios from 'axios';\n\nvar token     = '27fc0b07-5e85-41de-a749-338e1a00e4e8';\nvar $apiUrl   = 'https://api.cts-strasbourg.eu/v1/siri/2.0/';\n\nconst api = axios.create({\n  baseURL: $apiUrl,\n});\n\nconst client = (route, params) => (\n  api.get(route, {\n    params: params.params,\n    auth: {\n      username: token\n    }\n  }).then((res) => {\n    let data = res.data;\n    params.dispatch({type: params.type, data: data})\n  })\n);\n\nexport default client;","import client from './client';\n\nconst linesDiscovery = async ($params) => (\n  await client('lines-discovery', $params)\n);\n\nexport default linesDiscovery;","import client from './client';\n\nconst estimatedTimetable = async ($params) => (\n  await client('estimated-timetable', $params)\n);\n\nexport default estimatedTimetable;","import React, { useContext } from 'react';\nimport { StopSearchContext } from '../../providers/stopSearchProvider';\nimport { FormControlLabel, FormLabel, Checkbox } from '@material-ui/core';\n\nconst VehicleModeFilter = () => {\n  const { state: { VehicleMode }, dispatch } = useContext(StopSearchContext);\n\n  const handleChange = mode => event => {\n    dispatch({type: 'VehicleModeFilter', data: {mode: mode, checked: event.target.checked}});\n  };\n\n  return (\n    <div>\n      <FormLabel component=\"legend\">Type de transport</FormLabel>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={VehicleMode.bus}\n            onChange={handleChange('bus')}\n            value=\"bus\"\n            color=\"primary\"\n          />\n        }\n        label=\"Bus\"\n      />\n\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={VehicleMode.tram}\n            onChange={handleChange('tram')}\n            value=\"tram\"\n            color=\"primary\"\n          />\n        }\n        label=\"Tram\"\n      />\n    </div>\n  );\n}\n\nexport default VehicleModeFilter;\n","import React, { useContext } from 'react';\nimport { StopSearchContext } from '../../providers/stopSearchProvider';\nimport Select from 'react-select';\nimport { FormLabel } from '@material-ui/core';\n\nconst LineSelection = () => {\n  const { state: { lines, line, VehicleMode }, dispatch } = useContext(StopSearchContext);\n\n  const options = lines.filter((line) => {\n    if (VehicleMode[line.RouteType]) {\n      return true;\n    }\n    return false;\n  }).map(line => ({\n    value: line.LineRef,\n    label: line.RouteType+' '+line.LineRef+ ' - '+line.LineName\n  }));\n\n  const value = options.find(element => {\n    return element.value === line;\n  });\n\n  const handleChange = selected => {\n    dispatch({type: 'LineSelection', data: {line: selected.value}});\n  };\n\n  return (\n    <div>\n      <FormLabel component=\"legend\">Ligne</FormLabel>\n      <Select\n        value={value}\n        onChange={handleChange}\n        options={options}\n      />\n    </div>\n  );\n}\n\nexport default LineSelection;\n","import React, { useContext } from 'react';\nimport { StopSearchContext } from '../../providers/stopSearchProvider';\nimport Select from 'react-select';\nimport { FormLabel } from '@material-ui/core';\n\nconst StopSelection = () => {\n  const { state: { stops, stop, line }, dispatch } = useContext(StopSearchContext);\n\n  const options = stops.filter((stop) => {\n    if (stop.LineRef === line) {\n      return true;\n    }\n    return false;\n  }).map(stop => ({\n    value: stop.StopPointRef,\n    label: stop.VehicleMode+' '+stop.LineRef+' - '+stop.StopPointName+ ' => '+stop.DestinationName\n  }));\n\n  const value = options.find(element => {\n    return element.value === stop;\n  });\n\n  const handleChange = selected => {\n    dispatch({type: 'StopSelection', data: {stop: selected.value}});\n  };\n\n  let select = '';\n  if (options.length > 0) {\n    select =\n      <div>\n        <FormLabel component=\"legend\">Arrêt</FormLabel>\n        <Select\n          value={value}\n          onChange={handleChange}\n          options={options}\n        />\n      </div>\n  }\n\n  return (\n    <div>\n      {select}\n    </div>\n  );\n}\n\nexport default StopSelection;\n","import React, { useContext } from 'react';\nimport { StopSearchContext } from '../../providers/stopSearchProvider';\nimport { FormLabel } from '@material-ui/core';\nimport DateFnsUtils from '@date-io/date-fns';\nimport locale from 'date-fns/locale/fr';\nimport {\n  MuiPickersUtilsProvider,\n  TimePicker\n} from '@material-ui/pickers';\n\nconst DateSelection = () => {\n  const { state: { date, stop }, dispatch } = useContext(StopSearchContext);\n\n  const handleChange = date => {\n    dispatch({type: 'DateSelection', data: {date: date}});\n  };\n\n  if (stop === null) {\n    return <div></div>;\n  }\n\n  return (\n    <div>\n      <FormLabel component=\"legend\">Horaire</FormLabel>\n      <MuiPickersUtilsProvider utils={DateFnsUtils} locale={locale}>\n        <TimePicker\n          margin=\"normal\"\n          id=\"mui-pickers-time\"\n          ampm={false}\n          variant=\"inline\"\n          value={date}\n          onChange={handleChange}\n        />\n      </MuiPickersUtilsProvider>\n    </div>\n  );\n}\n\nexport default DateSelection;\n","import client from './client';\n\nconst stopMonitoring = async ($params) => (\n  await client('stop-monitoring', $params)\n);\n\nexport default stopMonitoring;","import React, { useContext } from 'react';\nimport { StopSearchContext } from '../../providers/stopSearchProvider';\nimport Button from '@material-ui/core/Button';\n\nimport stopMonitoring from '../../services/stopMonitoring';\n\nconst DateSelection = () => {\n  const { state: { stop, date, line, maxStopArrivals }, dispatch } = useContext(StopSearchContext);\n\n  const handleChange = () => {\n    stopMonitoring({\n      dispatch: dispatch,\n      type: 'Search',\n      params: {\n        MonitoringRef: stop,\n        LineRef: line,\n        StartTime: date,\n        MaximumStopVisits: maxStopArrivals\n      }\n    });\n\n  };\n\n  if (stop === null) {\n    return <div></div>;\n  }\n\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleChange}>\n        Rechercher\n      </Button>\n    </div>\n  );\n}\n\nexport default DateSelection;\n","import React, { Component } from 'react';\nimport moment from 'moment';\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.date = moment(props.date);\n    this.intervalId = null;\n\n    this.state = {\n      visibleDate: moment.utc(this.date.diff(moment())).format(\"HH:mm:ss\")\n    };\n  }\n\n  dateUpdate = () => {\n    this.setState({\n      visibleDate: moment.utc(this.date.diff(moment())).format(\"HH:mm:ss\")\n    });\n  }\n\n  componentDidUpdate() {\n    this.date = moment(this.props.date);\n  }\n\n  componentDidMount() {\n    this.intervalId = setInterval(this.dateUpdate, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.visibleDate}\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import React, { useContext } from 'react';\nimport { StopSearchContext } from '../../providers/stopSearchProvider';\nimport MUIDataTable from \"mui-datatables\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport moment from 'moment';\n\nimport Timer from \"./Timer\";\n\nconst DateSelection = () => {\n  const { state: { results } } = useContext(StopSearchContext);\n\n  const options = {\n    filter: false,\n    search: false,\n    print: false,\n    download: false,\n    viewColumns: false,\n    selectableRows: false,\n    rowsPerPage: 100,\n    customFooter: (\n      count,\n      page,\n      rowsPerPage,\n      changeRowsPerPage,\n      changePage\n    ) => {\n      return <TableFooter></TableFooter>;\n    }\n  };\n\n  const columns = [\n    \"Ligne\",\n    \"Arrêt\",\n    \"Destination\",\n    \"Temps réel\",\n    \"Arrivée\",\n    \"Départ\",\n    \"Estimation\"\n  ];\n\n  const data = results.map((result) => {\n    let element = [\n      result.VehicleMode+' '+result.LineRef,\n      result.StopPointName,\n      result.DestinationName,\n      result.IsRealTime === true ? \"Oui\" : \"Non\",\n      moment(result.ExpectedArrivalTime).format('DD/MM/YYYY HH:mm:ss'),\n      moment(result.ExpectedDepartureTime).format('DD/MM/YYYY HH:mm:ss'),\n      <Timer date={result.ExpectedArrivalTime} />\n      //moment.utc(moment(result.ExpectedArrivalTime).diff(moment())).format(\"HH:mm:ss\")\n    ];\n\n    return element;\n  });\n\n  if (results.length === 0) {\n    return <div></div>;\n  }\n\n  return (\n    <div>\n      <MUIDataTable\n        title={\"Liste des horaires\"}\n        data={data}\n        columns={columns}\n        options={options}\n      />\n    </div>\n  );\n}\n\nexport default DateSelection;\n","import React, { useContext, useEffect } from 'react';\nimport { StopSearchContext, StopSearchProvider } from '../providers/stopSearchProvider';\nimport linesDiscovery from '../services/linesDiscovery';\nimport estimatedTimetable from '../services/estimatedTimetable';\n\nimport VehicleModeFilter from './StopSearch/VehicleModeFilter';\nimport LineSelection from './StopSearch/LineSelection';\nimport StopSelection from './StopSearch/StopSelection';\nimport DateSelection from './StopSearch/DateSelection';\nimport SearchButton from './StopSearch/SearchButton';\nimport Results from './StopSearch/Results';\n\nconst StopSearchPage = () => {\n  const { dispatch } = useContext(StopSearchContext);\n\n  useEffect(() => {\n    linesDiscovery({\n      dispatch: dispatch,\n      type: 'setLines',\n      params: {}\n    });\n\n    estimatedTimetable({\n      dispatch: dispatch,\n      type: 'setStops',\n      params: {}\n    });\n  }, [dispatch]);\n\n  return (\n    <div>\n      <VehicleModeFilter />\n      <LineSelection />\n      <StopSelection />\n      <DateSelection />\n      <SearchButton />\n      <Results />\n    </div>\n  );\n}\n\nconst StopSearch = () => {\n  const StopSearchInitialState = {\n    lines: [],\n    stops: [],\n    VehicleMode: {\n      bus: true,\n      tram: true\n    },\n    line: null,\n    stop: null,\n    date: new Date(),\n    results: [],\n    maxStopArrivals: 5\n  };\n\n  return (\n    <StopSearchProvider initialState={StopSearchInitialState}>\n      <StopSearchPage />\n    </StopSearchProvider>\n  );\n}\n\nexport default StopSearch;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport StopSearch from './pages/StopSearch';\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={StopSearch} />\n      <Route exact path=\"/cts-2019/\" component={StopSearch} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
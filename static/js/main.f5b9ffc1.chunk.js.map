{"version":3,"sources":["reducers/stopSearchReducer.js","providers/stopSearchProvider.js","services/client.js","services/linesDiscovery.js","services/estimatedTimetable.js","services/cache.js","services/cache/lines.js","services/cache/stops.js","pages/StopSearch/VehicleModeFilter.js","pages/StopSearch/LineSelection.js","pages/StopSearch/StopSelection.js","pages/StopSearch/DateSelection.js","pages/StopSearch/SearchButton.js","pages/StopSearch/Timer.js","pages/StopSearch/Results.js","pages/StopSearch/Loading.js","services/stopMonitoring.js","pages/StopSearch/Form.js","themes/ctsTheme.js","pages/StopSearch.js","pages/MakeLinesFile/Download.js","pages/MakeLinesFile/Lines.js","pages/MakeLinesFile/Stops.js","pages/MakeLinesFile.js","App.js","serviceWorker.js","index.js"],"names":["loading","stopSearchReducer","state","action","type","lines","data","LinesDelivery","AnnotatedLineRef","map","line","LineRef","LineName","RouteType","Extension","stops","length","Object","objectSpread","stopsIds","ServiceDelivery","EstimatedTimetableDelivery","Etd","EstimatedJourneyVersionFrame","Ejvf","EstimatedVehicleJourney","Evj","DirectionRef","VehicleMode","EstimatedCalls","Ec","StopPointRef","push","StopPointName","DestinationName","mode","checked","stop","date","results","StopMonitoringDelivery","MonitoredStopVisit","visit","journey","MonitoredVehicleJourney","call","MonitoredCall","IsRealTime","ExpectedArrivalTime","ExpectedDepartureTime","maxStopArrivals","undefined","match","params","bus","JSON","parse","tram","load","Error","StopSearchContext","createContext","StopSearchProvider","_ref","children","initialState","_useReducer","useReducer","_useReducer2","slicedToArray","context","dispatch","react_default","a","createElement","Provider","value","api","axios","create","baseURL","client","route","get","auth","username","then","res","catch","error","alert","linesDiscovery","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","sent","_x","apply","this","arguments","estimatedTimetable","process","cache","VehicleModeFilter","_useContext","useContext","handleChange","event","target","FormLabel","component","FormControlLabel","control","Checkbox","onChange","color","label","LineSelection","_useContext$state","options","filter","find","element","selectStyles","menu","styles","zIndex","react_select_browser_esm","selected","StopSelection","select","DateSelection","Grid","container","justify","spacing","key","item","xs","material_ui_pickers_esm","utils","DateFnsUtils","locale","id","ampm","variant","Button","onClick","Date","index_es","icon","faUndo","withRouter","history","Timer","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","dateUpdate","setState","visibleDate","calculate","diff","moment","finishedText","utc","format","intervalId","setInterval","clearInterval","Component","Results","search","print","download","viewColumns","selectableRows","rowsPerPage","customFooter","count","page","changeRowsPerPage","changePage","TableFooter","result","StopSearch_Timer","dist_default","title","columns","withTheme","faSpinner","pulse","size","theme","palette","primary","main","stopMonitoring","useStyles","makeStyles","root","padding","classes","useEffect","MonitoringRef","StartTime","MaximumStopVisits","Paper","className","StopSearch_VehicleModeFilter","StopSearch_DateSelection","StopSearch_LineSelection","StopSearch_StopSelection","style","textAlign","SearchButton","StopSearch_Loading","StopSearch_Results","ctsTheme","createMuiTheme","StopSearchPage","location","console","log","nocache","queryString","StopSearch_Form","StopSearch","StopSearchInitialState","ThemeProvider","stopSearchProvider_StopSearchProvider","Download","json","filename","href","encodeURIComponent","Lines","stringify","MakeLinesFile_Download","Stops","MakeLinesFilePage","MakeLinesFile_Lines","MakeLinesFile_Stops","MakeLinesFile","MakeLinesFile_MakeLinesFilePage","App","react_router_dom","basename","react_router","exact","path","Boolean","window","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f5b9ffc1.chunk.js","sourcesContent":["let loading = false;\n\nconst stopSearchReducer = (state, action) => {\n  switch (action.type) {\n    // Action : setLines\n    case 'setLines':\n      loading = true;\n      let lines = action.data.LinesDelivery.AnnotatedLineRef.map((line) => {\n        return {\n          LineRef: line.LineRef,\n          LineName: line.LineName,\n          RouteType: line.Extension.RouteType\n        }\n      });\n\n      if (state.stops.length > 0) {\n        loading = false;\n      }\n\n      return {\n        ...state,\n        lines: lines,\n        loading: loading\n      };\n\n    // Action : setStops\n    case 'setStops':\n      loading = true;\n      let stops = [];\n      let stopsIds = {};\n\n      action.data.ServiceDelivery.EstimatedTimetableDelivery.map((Etd) => {\n        Etd.EstimatedJourneyVersionFrame.map((Ejvf) => {\n          Ejvf.EstimatedVehicleJourney.map((Evj) => {\n            let LineRef       = Evj.LineRef;\n            let DirectionRef  = Evj.DirectionRef;\n            let VehicleMode   = Evj.Extension.VehicleMode;\n\n            Evj.EstimatedCalls.map((Ec) => {\n              if (stopsIds[Ec.StopPointRef]) {\n                return false;\n              }\n\n              stops.push({\n                LineRef: LineRef,\n                DirectionRef: DirectionRef,\n                StopPointRef: Ec.StopPointRef,\n                StopPointName: Ec.StopPointName,\n                DestinationName: Ec.DestinationName,\n                VehicleMode: VehicleMode\n              });\n\n              stopsIds[Ec.StopPointRef] = true;\n\n              return false;\n            });\n\n            return false;\n          });\n          return false;\n        });\n        return false;\n      });\n\n      if (state.lines.length > 0) {\n        loading = false;\n      }\n\n      return {\n        ...state,\n        stops: stops,\n        loading: loading\n      };\n\n    // Action : VehicleModeFilter\n    case 'VehicleModeFilter':\n      let VehicleMode = state.VehicleMode;\n      VehicleMode[action.data.mode] = action.data.checked;\n\n      return {\n        ...state,\n        VehicleMode: VehicleMode\n      }\n\n    // Action : LineSelection\n    case 'LineSelection':\n      return {\n        ...state,\n        line: action.data.line\n      }\n\n    // Action : StopSelection\n    case 'StopSelection':\n      return {\n        ...state,\n        stop: action.data.stop\n      }\n\n    // Action : DateSelection\n    case 'DateSelection':\n      return {\n        ...state,\n        date: action.data.date\n      }\n\n    // Action : Search\n    case 'Search':\n      let results = [];\n\n      if (typeof(action.data.ServiceDelivery.StopMonitoringDelivery[0].MonitoredStopVisit) === 'undefined') {\n        return {\n          ...state,\n          results: results\n        }\n      }\n\n      action.data.ServiceDelivery.StopMonitoringDelivery[0].MonitoredStopVisit.map((visit) => {\n        let journey = visit.MonitoredVehicleJourney;\n        let call = journey.MonitoredCall;\n\n        results.push({\n          DestinationName: journey.DestinationName,\n          LineRef: journey.LineRef,\n          VehicleMode: journey.VehicleMode,\n          IsRealTime: call.Extension.IsRealTime,\n          StopPointName: call.StopPointName,\n          ExpectedArrivalTime: call.ExpectedArrivalTime,\n          ExpectedDepartureTime: call.ExpectedDepartureTime\n        });\n\n        return false;\n      });\n\n      return {\n        ...state,\n        results: results,\n        loading: false\n      }\n\n    // Action : maxStopArrivalsSelection\n    case 'maxStopArrivalsSelection':\n      return {\n        ...state,\n        maxStopArrivals: action.data.maxStopArrivals\n      }\n\n    // Action : Loading\n    case 'loading':\n      return {\n        ...state,\n        loading: true\n      }\n\n    // Action routeParams : load's parameters from route\n    case 'routeParams':\n      if (action.data.match.params.stop !== undefined) {\n        return {\n          ...state,\n          VehicleMode: {\n            bus: JSON.parse(action.data.match.params.bus),\n            tram: JSON.parse(action.data.match.params.tram)\n          },\n          line: action.data.match.params.line,\n          stop: action.data.match.params.stop\n        }\n      } else {\n        return {\n          ...state\n        }\n      }\n\n    // loadResult : Load results from route parameters\n    case 'loadResult':\n      if (action.data.match.params.stop !== undefined) {\n        action.data.load(action.data.match.params.stop, action.data.match.params.line, state.date, state.maxStopArrivals);\n      }\n\n      return {\n        ...state\n      }\n\n    case 'setLinesFromCache':\n      if (state.stops.length > 0) {\n        loading = false;\n      }\n\n      return {\n        ...state,\n        lines: action.data,\n        loading: loading\n      }\n\n    case 'setStopsFromCache':\n      if (state.lines.length > 0) {\n        loading = false;\n      }\n\n      return {\n        ...state,\n        stops: action.data,\n        loading: loading\n      }\n\n    // Action : default\n    default:\n      throw new Error();\n  }\n};\n\nexport { stopSearchReducer };\n","import React, { createContext, useReducer } from \"react\";\nimport { stopSearchReducer } from \"../reducers/stopSearchReducer\";\n\nconst StopSearchContext = createContext({});\n\nconst StopSearchProvider = ({ children, initialState }) => {\n  const [state, dispatch] = useReducer(stopSearchReducer, initialState);\n  const context = { state, dispatch };\n  return (\n    <StopSearchContext.Provider value={context}>{children}</StopSearchContext.Provider>\n  );\n};\n\nexport { StopSearchContext, StopSearchProvider };","import axios from 'axios';\n\nvar token     = '27fc0b07-5e85-41de-a749-338e1a00e4e8';\nvar apiUrl   = 'https://api.cts-strasbourg.eu/v1/siri/2.0/';\n\nconst api = axios.create({\n  baseURL: apiUrl,\n});\n\nconst client = (route, params) => (\n  api.get(route, {\n    params: params.params,\n    auth: {\n      username: token\n    }\n  }).then((res) => {\n    let data = res.data;\n    params.dispatch({type: params.type, data: data})\n  }).catch(function (error) {\n    alert(error);\n  })\n);\n\nexport default client;","import client from './client';\n\nconst linesDiscovery = async (params) => (\n  await client('lines-discovery', params)\n);\n\nexport default linesDiscovery;","import client from './client';\n\nconst estimatedTimetable = async (params) => (\n  await client('estimated-timetable', params)\n);\n\nexport default estimatedTimetable;","import axios from 'axios';\n\n\nconst api = axios.create({\n  baseURL: process.env.PUBLIC_URL+'/cache/',\n});\n\nconst cache = (route, params) => (\n  api.get(route, {\n    params: params.params,\n  }).then((res) => {\n    let data = res.data;\n    params.dispatch({type: params.type, data: data})\n  }).catch(function (error) {\n    alert(error);\n  })\n);\n\nexport default cache;","import cache from '../cache';\n\nconst lines = async (params) => (\n  await cache('lines.json', params)\n);\n\nexport default lines;","import cache from '../cache';\n\nconst stops = async (params) => (\n  await cache('stops.json', params)\n);\n\nexport default stops;","import React, { useContext } from 'react';\nimport { StopSearchContext } from '../../providers/stopSearchProvider';\nimport { FormControlLabel, FormLabel, Checkbox } from '@material-ui/core';\n\nconst VehicleModeFilter = () => {\n  const { state: { VehicleMode }, dispatch } = useContext(StopSearchContext);\n\n  const handleChange = mode => event => {\n    dispatch({type: 'VehicleModeFilter', data: {mode: mode, checked: event.target.checked}});\n  };\n\n  return (\n    <div>\n      <FormLabel component=\"legend\">Type de transport</FormLabel>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={VehicleMode.bus}\n            onChange={handleChange('bus')}\n            value=\"bus\"\n            color=\"primary\"\n          />\n        }\n        label=\"Bus\"\n      />\n\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={VehicleMode.tram}\n            onChange={handleChange('tram')}\n            value=\"tram\"\n            color=\"primary\"\n          />\n        }\n        label=\"Tram\"\n      />\n    </div>\n  );\n}\n\nexport default VehicleModeFilter;\n","import React, { useContext } from 'react';\nimport { StopSearchContext } from '../../providers/stopSearchProvider';\nimport Select from 'react-select';\nimport { FormLabel } from '@material-ui/core';\n\nconst LineSelection = () => {\n  const { state: { lines, line, VehicleMode }, dispatch } = useContext(StopSearchContext);\n\n  const options = lines.filter((line) => {\n    if (VehicleMode[line.RouteType]) {\n      return true;\n    }\n    return false;\n  }).map(line => ({\n    value: line.LineRef,\n    label: line.RouteType+' '+line.LineRef+ ' - '+line.LineName\n  }));\n\n  const value = options.find(element => {\n    return element.value === line;\n  });\n\n  const handleChange = selected => {\n    dispatch({type: 'LineSelection', data: {line: selected.value}});\n  };\n\n  const selectStyles = { menu: styles => ({ ...styles, zIndex: 999 }) };\n\n  return (\n    <div>\n      <FormLabel component=\"legend\">Ligne</FormLabel>\n      <Select\n        value={value}\n        onChange={handleChange}\n        options={options}\n        styles={selectStyles}\n      />\n    </div>\n  );\n}\n\nexport default LineSelection;\n","import React, { useContext } from 'react';\nimport { StopSearchContext } from '../../providers/stopSearchProvider';\nimport Select from 'react-select';\nimport { FormLabel } from '@material-ui/core';\n\nconst StopSelection = () => {\n  const { state: { stops, stop, line }, dispatch } = useContext(StopSearchContext);\n\n  const options = stops.filter((stop) => {\n    if (stop.LineRef === line) {\n      return true;\n    }\n    return false;\n  }).map(stop => ({\n    value: stop.StopPointRef,\n    label: stop.VehicleMode+' '+stop.LineRef+' - '+stop.StopPointName+ ' => '+stop.DestinationName\n  }));\n\n  const value = options.find(element => {\n    return element.value === stop;\n  });\n\n  const handleChange = selected => {\n    dispatch({type: 'StopSelection', data: {stop: selected.value}});\n  };\n\n  const selectStyles = { menu: styles => ({ ...styles, zIndex: 999 }) };\n\n  let select = '';\n  if (options.length > 0) {\n    select =\n      <div>\n        <FormLabel component=\"legend\">Arrêt</FormLabel>\n        <Select\n          value={value}\n          onChange={handleChange}\n          options={options}\n          styles={selectStyles}\n        />\n      </div>\n  }\n\n  return (\n    <div>\n      {select}\n    </div>\n  );\n}\n\nexport default StopSelection;\n","import React, { useContext } from 'react';\nimport { StopSearchContext } from '../../providers/stopSearchProvider';\nimport { FormLabel } from '@material-ui/core';\nimport DateFnsUtils from '@date-io/date-fns';\nimport locale from 'date-fns/locale/fr';\nimport {\n  MuiPickersUtilsProvider,\n  TimePicker\n} from '@material-ui/pickers';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUndo } from '@fortawesome/free-solid-svg-icons';\n\nconst DateSelection = () => {\n  const { state: { date, stop }, dispatch } = useContext(StopSearchContext);\n\n  const handleChange = date => {\n    dispatch({type: 'DateSelection', data: {date: date}});\n  };\n\n  const handleReset = () => {\n    dispatch({type: 'DateSelection', data: {date: new Date()}});\n  }\n\n  if (stop === null) {\n    return <div></div>;\n  }\n\n  return (\n    <div>\n      <FormLabel component=\"legend\">Horaire</FormLabel>\n      <Grid container justify=\"center\" spacing={2}>\n        <Grid key='MuiPickersUtilsProvider' item xs={6}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils} locale={locale}>\n            <TimePicker\n              id=\"mui-pickers-time\"\n              ampm={false}\n              variant=\"inline\"\n              value={date}\n              onChange={handleChange}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid key='button' item xs={6}>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleReset}>\n            <FontAwesomeIcon icon={faUndo} />\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default DateSelection;\n","import React, { useContext } from 'react';\nimport { StopSearchContext } from '../../providers/stopSearchProvider';\nimport Button from '@material-ui/core/Button';\nimport { withRouter } from 'react-router-dom';\n\nconst DateSelection = ( {history} ) => {\n  const { state: { stop, line, VehicleMode }, dispatch } = useContext(StopSearchContext);\n\n  const handleChange = () => {\n    dispatch({type: 'loading'});\n\n    history.push('/'+VehicleMode.bus+'/'+VehicleMode.tram+'/'+line+'/'+stop);\n  };\n\n  if (stop === null) {\n    return <div></div>;\n  }\n\n  return (\n    <Button variant=\"contained\" color=\"primary\" onClick={handleChange}>\n      Rechercher\n    </Button>\n  );\n}\n\nexport default withRouter(DateSelection);\n","import React, { Component } from 'react';\nimport moment from 'moment';\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.date = moment(props.date);\n    this.intervalId = null;\n\n    this.state = {\n      visibleDate: this.calculate()\n    };\n  }\n\n  dateUpdate = () => {\n    this.setState({\n      visibleDate: this.calculate()\n    });\n  }\n\n  calculate = () => {\n    let diff = this.date.diff(moment());\n    if (diff < 0) {\n      return this.props.finishedText;\n    }\n    return moment.utc(diff).format(\"HH:mm:ss\");\n  }\n\n  componentDidUpdate() {\n    this.date = moment(this.props.date);\n  }\n\n  componentDidMount() {\n    this.intervalId = setInterval(this.dateUpdate, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.visibleDate}\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import React, { useContext } from 'react';\nimport { StopSearchContext } from '../../providers/stopSearchProvider';\nimport MUIDataTable from \"mui-datatables\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport moment from 'moment';\n\nimport Timer from \"./Timer\";\n\nconst Results = () => {\n  const { state: { results, stop } } = useContext(StopSearchContext);\n\n  const options = {\n    filter: false,\n    search: false,\n    print: false,\n    download: false,\n    viewColumns: false,\n    selectableRows: 'none',\n    rowsPerPage: 100,\n    customFooter: (\n      count,\n      page,\n      rowsPerPage,\n      changeRowsPerPage,\n      changePage\n    ) => {\n      return <TableFooter></TableFooter>;\n    }\n  };\n\n  const columns = [\n    \"Ligne\",\n    \"Arrêt\",\n    \"Destination\",\n    \"Temps réel\",\n    \"Arrivée\",\n    \"Départ\",\n    \"Arrivée dans\",\n    \"Départ dans\"\n  ];\n\n  const data = results.map((result) => {\n    let element = [\n      result.VehicleMode+' '+result.LineRef,\n      result.StopPointName,\n      result.DestinationName,\n      result.IsRealTime === true ? \"Oui\" : \"Non\",\n      moment(result.ExpectedArrivalTime).format('DD/MM/YYYY HH:mm:ss'),\n      moment(result.ExpectedDepartureTime).format('DD/MM/YYYY HH:mm:ss'),\n      <Timer date={result.ExpectedArrivalTime} finishedText=\"Arrivé\" />,\n      <Timer date={result.ExpectedDepartureTime} finishedText=\"Passé\" />\n      //moment.utc(moment(result.ExpectedArrivalTime).diff(moment())).format(\"HH:mm:ss\")\n    ];\n\n    return element;\n  });\n\n  if (results.length === 0) {\n    if (stop != null) {\n      return <div>Pas de résultat.</div>;\n    }\n    return <div></div>;\n  }\n\n  return (\n    <div>\n      <br />\n      <MUIDataTable\n        title={\"Liste des horaires\"}\n        data={data}\n        columns={columns}\n        options={options}\n      />\n    </div>\n  );\n}\n\nexport default Results;\n","import React,  { useContext } from 'react';\nimport { StopSearchContext } from '../../providers/stopSearchProvider';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { withTheme } from '@material-ui/styles';\n\nconst Loading = (props) => {\n  const { state: { loading } } = useContext(StopSearchContext);\n\n  if (!loading) {\n    return <div></div>\n  }\n\n  return (\n    <FontAwesomeIcon icon={faSpinner} pulse size=\"4x\" color={props.theme.palette.primary.main} />\n  );\n}\n\nexport default withTheme(Loading);\n","import client from './client';\n\nconst stopMonitoring = async (params) => (\n  await client('stop-monitoring', params)\n);\n\nexport default stopMonitoring;","import React, {useContext, useEffect} from 'react';\n\nimport VehicleModeFilter from './VehicleModeFilter';\nimport LineSelection from './LineSelection';\nimport StopSelection from './StopSelection';\nimport DateSelection from './DateSelection';\nimport SearchButton from './SearchButton';\nimport Results from './Results';\nimport Loading from './Loading';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router-dom';\n\nimport { StopSearchContext } from '../../providers/stopSearchProvider';\n\nimport stopMonitoring from '../../services/stopMonitoring';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n  },\n}));\n\nconst Form = ( {match} ) => {\n  const classes = useStyles();\n  const { dispatch } = useContext(StopSearchContext);\n\n  useEffect(() => {\n    dispatch({type: 'routeParams', data: {match: match}});\n\n    dispatch({type: 'loadResult', data: {\n      match: match,\n      load: (stop, line, date, maxStopArrivals) => {\n        stopMonitoring({\n          dispatch: dispatch,\n          type: 'Search',\n          params: {\n            MonitoringRef: stop,\n            LineRef: line,\n            StartTime: date,\n            MaximumStopVisits: maxStopArrivals\n          }\n        });\n      }\n    }});\n  }, [dispatch, match]);\n\n  return (\n    <Paper className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Grid container justify=\"center\" spacing={2}>\n            <Grid key='VehicleModeFilter' item xs={6}>\n              <VehicleModeFilter />\n            </Grid>\n            <Grid key='DateSelection' item xs={6}>\n              <DateSelection />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" spacing={2}>\n            <Grid key='LineSelection' item xs={12}>\n              <LineSelection />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" spacing={2}>\n            <Grid key='LineSelection' item xs={12}>\n              <StopSelection />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" spacing={2}>\n            <Grid key='LineSelection' item xs={12} style={{textAlign: \"center\"}}>\n              <SearchButton />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" spacing={2}>\n            <Grid key='LineSelection' item xs={12} style={{textAlign: \"center\"}}>\n              <Loading />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Results />\n    </Paper>\n  );\n}\n\n\nexport default withRouter(Form);\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst ctsTheme = createMuiTheme({});\n\nexport default ctsTheme;","import React, { useContext, useEffect } from 'react';\nimport queryString from 'query-string';\nimport { withRouter } from 'react-router-dom';\n\nimport { StopSearchContext, StopSearchProvider } from '../providers/stopSearchProvider';\nimport linesDiscovery from '../services/linesDiscovery';\nimport estimatedTimetable from '../services/estimatedTimetable';\n\nimport lines from '../services/cache/lines';\nimport stops from '../services/cache/stops';\n\nimport Form from './StopSearch/Form';\n\nimport ctsTheme from '../themes/ctsTheme';\n\nimport { ThemeProvider } from '@material-ui/styles';\n\nconst StopSearchPage = withRouter(( {location} ) => {\n  const { dispatch } = useContext(StopSearchContext);\n\n  console.log(location)\n  const qs = queryString.parse(location.search);\n  const nocache = qs.nocache;\n\n  useEffect(() => {\n    dispatch({type: 'loading'});\n\n    if (typeof(nocache) !== 'undefined') {\n      // No cache - direct from cts api\n      linesDiscovery({\n        dispatch: dispatch,\n        type: 'setLines',\n        params: {}\n      });\n\n      estimatedTimetable({\n        dispatch: dispatch,\n        type: 'setStops',\n        params: {}\n      });\n    } else {\n      // App pre generated cache\n      lines({\n        dispatch: dispatch,\n        type: 'setLinesFromCache',\n        params: {}\n      });\n\n      stops({\n        dispatch: dispatch,\n        type: 'setStopsFromCache',\n        params: {}\n      });\n    }\n  }, [dispatch, nocache]);\n\n  return (\n    <Form />\n  );\n});\n\nconst StopSearch = () => {\n  const StopSearchInitialState = {\n    lines: [],\n    stops: [],\n    VehicleMode: {\n      bus: true,\n      tram: true\n    },\n    line: null,\n    stop: null,\n    date: new Date(),\n    results: [],\n    maxStopArrivals: 5,\n    loading: false\n  };\n\n  return (\n    <ThemeProvider theme={ctsTheme}>\n      <StopSearchProvider initialState={StopSearchInitialState}>\n        <StopSearchPage />\n      </StopSearchProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default StopSearch;\n","import React from 'react';\nimport { Button } from '@material-ui/core';\n\nconst Download = ( {json, filename, label} ) => {\n  if (json === '{}') {\n    return <div></div>\n  }\n\n  const href = 'data:application/json;charset=utf-8,' + encodeURIComponent(json);\n\n  return (\n    <Button href={href} download={filename} color=\"primary\" variant=\"contained\">\n        {label}\n    </Button>\n  );\n}\n\n\nexport default Download;\n","import React, { useContext } from 'react';\n\nimport { StopSearchContext } from '../../providers/stopSearchProvider';\nimport Download from './Download';\n\nconst Lines = () => {\n  const { state: { lines } } = useContext(StopSearchContext);\n\n  const json = JSON.stringify(lines);\n\n  return (\n    <Download label=\"lignes\" json={json} filename=\"lines.json\" />\n  );\n}\n\n\nexport default Lines;\n","import React, { useContext } from 'react';\n\nimport { StopSearchContext } from '../../providers/stopSearchProvider';\nimport Download from './Download';\n\nconst Stops = () => {\n  const { state: { stops } } = useContext(StopSearchContext);\n\n  const json = JSON.stringify(stops);\n\n  return (\n    <Download label=\"Stops\" json={json} filename=\"stops.json\" />\n  );\n}\n\n\nexport default Stops;\n","import React, { useContext, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { StopSearchContext, StopSearchProvider } from '../providers/stopSearchProvider';\nimport linesDiscovery from '../services/linesDiscovery';\nimport estimatedTimetable from '../services/estimatedTimetable';\n\nimport Lines from './MakeLinesFile/Lines';\nimport Stops from './MakeLinesFile/Stops';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n  },\n}));\n\nconst MakeLinesFilePage = () => {\n  const classes = useStyles();\n  const { dispatch } = useContext(StopSearchContext);\n\n  useEffect(() => {\n    linesDiscovery({\n      dispatch: dispatch,\n      type: 'setLines',\n      params: {}\n    });\n\n    estimatedTimetable({\n      dispatch: dispatch,\n      type: 'setStops',\n      params: {}\n    });\n  }, [dispatch]);\n\n  return (\n    <Grid container spacing={2} className={classes.root}>\n      <Grid item xs={12}>\n        <Lines />\n      </Grid>\n      <Grid item xs={12}>\n        <Stops />\n      </Grid>\n    </Grid>\n  );\n}\n\nconst MakeLinesFile = () => {\n  const StopSearchInitialState = {\n    lines: [],\n    stops: [],\n    VehicleMode: {\n      bus: true,\n      tram: true\n    },\n    line: null,\n    stop: null,\n    date: new Date(),\n    results: [],\n    maxStopArrivals: 5,\n    loading: false\n  };\n\n  return (\n    <StopSearchProvider initialState={StopSearchInitialState}>\n      <MakeLinesFilePage />\n    </StopSearchProvider>\n  );\n}\n\nexport default MakeLinesFile;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport StopSearch from './pages/StopSearch';\nimport MakeLinesFile from './pages/MakeLinesFile';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path='/admin/lines' component={MakeLinesFile} />\n        <Route exact path='/:bus?/:tram?/:line?/:stop?' component={StopSearch} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}